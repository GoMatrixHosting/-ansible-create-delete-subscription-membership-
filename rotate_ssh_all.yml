- name: "Rotates the client SSH key for every server and re-creates all the SSH credentials in AWX."
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: Include hosting vars
      include_vars:
        file: /var/lib/awx/projects/hosting/hosting_vars.yml
      no_log: True

    - name: Include vaulted SSH password variable
      include_vars:
        file: /var/lib/awx/projects/hosting/vaulted_ssh_password.yml
      no_log: true

    - name: Create a AWX session token for executing modules
      awx.awx.tower_token:
        description: 'AWX Session Token'
        scope: "write"
        state: present
        tower_host: "https://{{ awx_host }}"
        tower_oauthtoken: "{{ awx_master_token }}"
      register: awx_session_token
      no_log: True

    - name: Install jq in AWX
      delegate_to: 127.0.0.1
      yum:
        name: jq
        state: latest

    - name: Generate a list of matrix_domains
      shell: |
        jq -r '.matrix_domain' /var/lib/awx/projects/clients/*/*/extra_vars.json | sed "s/$/ - 00 - Rotate SSH Key/" | grep -ve "^null"
      register: list_job_templates

    - name: Execute every job template sequentially (change host)
      include_tasks: rotate_ssh_host.yml 
      loop: "{{ list_job_templates.stdout_lines | flatten(levels=1) }}"

# Broken by 0.6.1

    - name: Generate a list of member_ids that have 'AWX SSH Key' credentials
      shell: |
        curl -sku {{ tower_username }}:{{ tower_password }} -H "Content-Type: application/json" -X GET https://{{ tower_host }}/api/v2/credentials/ | jq '.results[] | {name}' | grep -e "^.* - AWX SSH Key" | sed 's/  \"name\": \"//g' | sed 's/ - AWX SSH Key\"//g'
      register: list_member_ids
      no_log: True

    - name: Execute every job template sequentially (change credential)
      include_tasks: rotate_ssh_credential.yml 
      loop: "{{ list_member_ids.stdout_lines | flatten(levels=1) }}"

    - name: Delete the AWX session token for executing modules
      awx.awx.tower_token:
        description: 'AWX Session Token'
        scope: "write"
        state: absent
        existing_token_id: "{{ awx_session_token.ansible_facts.tower_token.id }}"
        tower_host: "https://{{ awx_host }}"
        tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
