- name: "Rotates the client SSH key for every server."
  hosts: localhost
  connection: local
  gather_facts: false

#  vars:
#    ansible_connection: local

# needs to be a section in create-awx-system where there's a 'hosting_name - AWX SSH Key' credential that is the same as the one in each subscription? [done]

  tasks:
  
# Extra tasks
# - update admin users password? could do
# - update AWX hosts authorized_keys? not possible or wise
# - update backup servers authorized_keys? i guess?
  
    - name: Install jq in AWX
      yum:
        name: jq
        state: latest
  
    - name: Generate a list of matrix_domains
      shell: |
        cat /var/lib/awx/projects/clients/*/*/extra_vars.json | jq -r '.matrix_domain' | sed "s/$/ - 00 - Rotate SSH Key/" | grep -ve "^null"
      register: list_job_templates

    - name: Include hosting vars
      include_vars:
        file: /var/lib/awx/projects/hosting/hosting_vars.yml
      no_log: True

    - name: Include vaulted SSH password variable
      include_vars:
        file: /var/lib/awx/projects/hosting/vaulted_ssh_password.yml
      no_log: true

# load public key into new_ssh_public_key

#    - name: Load new AWX > Client public SSH key into variable
#      set_fact:
#        new_ssh_public_key: "{{ lookup('file', '/var/lib/awx/projects/hosting/client_public.key') }}"

#    - name: Print new_ssh_public_key value
#      debug:
#        msg: "new_ssh_public_key: {{ new_ssh_public_key }}"

    - name: Collect AWX admin token the hard way!
      delegate_to: 127.0.0.1
      shell: |
          curl -sku {{ tower_username }}:{{ tower_password }} -H "Content-Type: application/json" -X POST -d '{"description":"Tower CLI", "application":null, "scope":"write"}' https://{{ tower_host }}/api/v2/users/1/personal_tokens/ | jq '.token' | sed -r 's/\"//g'
      register: tower_token
      no_log: True 

    - name: Execute every job template sequentially (change host)
      include_tasks: rotate_ssh_host.yml 
      loop: "{{ list_job_templates.stdout_lines | flatten(levels=1) }}"

    - name: Generate a list of member_ids
      shell: |
        cat /var/lib/awx/projects/clients/*/*/extra_vars.json | jq -r '.member_id' | awk '!seen[$0]++'
      register: list_member_ids

    - name: Execute every job template sequentially (change credential)
      include_tasks: rotate_ssh_credential.yml 
      loop: "{{ list_member_ids.stdout_lines | flatten(levels=1) }}"

# finally after all those changes have been applied, change the admin users SSH Keys credential

#    - name: Re-create 'AWX SSH Key' credential in AWX admins organisation
#      awx.awx.tower_credential:
#        name: "{{ org_name }} [Admin] - AWX SSH Key"
#        description: "The SSH key for accessing client servers."
#        organization: "{{ org_name }} [Admin]"
#        credential_type: Machine
#        inputs:
#          ssh_key_data: "{{ lookup('file', '{{ client_private_ssh_key }}') }}"
#          ssh_key_unlock: "{{ client_private_ssh_key_password }}"
#        tower_host: "https://{{ awx_url }}"
#        tower_oauthtoken: "{{ tower_token.stdout }}"
#        validate_certs: yes

# trigger re-provision?
