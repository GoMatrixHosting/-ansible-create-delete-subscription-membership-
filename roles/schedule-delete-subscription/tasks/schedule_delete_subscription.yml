
- name: Include hosting vars
  include_vars:
    file: /var/lib/awx/projects/hosting/hosting_vars.yml
  no_log: True

- name: Install jq in AWX
  delegate_to: 127.0.0.1
  yum:
    name: jq
    state: latest
    
- name: Collect AWX admin token the hard way!
  delegate_to: 127.0.0.1
  shell: |
      curl -sku {{ tower_username }}:{{ tower_password }} -H "Content-Type: application/json" -X POST -d '{"description":"Tower CLI", "application":null, "scope":"write"}' https://{{ tower_host }}/api/v2/users/1/personal_tokens/ | jq '.token' | sed -r 's/\"//g'
  register: tower_token
  no_log: True 

# create `0 - {{ subsccription_id }} - << SUBSCRIPTION DELETION IN PROGRESS >>` job template  (done)
# schedule it {{ delete_subscription_hours_delay }} hours from now (done)
# should be able to disarm it - by memberpress or survey
# Remove execute permissions from all the existing job templates, except for the "Access Export", so that they are read-only (done)

# stop existing server (done)

# copy extra_vars.json

- name: Copy extra_vars.json
  delegate_to: 127.0.0.1
  command: |
    cp /var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json /var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/delete_extra_vars.json

# append extra_vars.json

- name: Append new cancel_deletion variable to delete_extra_vars.json
  delegate_to: 127.0.0.1
  lineinfile:
    insertafter: '{'
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/delete_extra_vars.json'
    line: '  "cancel_deletion": "false",'
    mode: '0600'
    state: present

- name: Create '<< SUBSCRIPTION DELETION IN PROGRESS >>' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "0 - {{ subscription_id }} - << SUBSCRIPTION DELETION IN PROGRESS >>"
    description: "Your subscription and Matrix server is scheduled for deletion. date??"
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "delete-subscription"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '{{ role_path }}/surveys/delete_subscription.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes

#- name: Collect timezone of AWX server (Debian and derivatives only) 
#  delegate_to: 127.0.0.1
#  command: cat /etc/timezone
#  register: timezone_output

- name: Collect timestamp of AWX server
  delegate_to: 127.0.0.1
  command: date +%Y%m%dT%H%M%S
  register: timestamp_output

- name: Create an rrule string for a daily schedule
  set_fact:
    rrule_line: "DTSTART;TZID=UTC:{{ timestamp_output.stdout }} RRULE:FREQ=HOURLY;INTERVAL={{ delete_subscription_hours_delay }}"

#    rrule_line_daily: "DTSTART;TZID={{ timezone_output.stdout }}:20200101T000000 RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=SU,MO,TU,WE,TH,FR,SA"

- debug:
    msg: "rrule_line: '{{ rrule_line }}'"

- name: Build a schedule for '<< SUBSCRIPTION DELETION IN PROGRESS >>' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_schedule:
    name: "{{ subscription_id }} - << SUBSCRIPTION DELETION IN PROGRESS >>"
    enabled: yes
    state: present
    unified_job_template: "0 - {{ subscription_id }} - << SUBSCRIPTION DELETION IN PROGRESS >>"
    job_tags: "delete-subscription"
    extra_data: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/delete_extra_vars.json') }}"
    rrule: "{{ rrule_line }}"
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes

- name: Revoke execute permission on 'Deploy/Update a Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Deploy/Update a Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined
  
- name: Revoke execute permission on 'Backup Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Backup Server"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined 

- name: Grant read permission on 'Backup Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Backup Server"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined 

- name: Revoke execute permission on 'Self-Check' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Self-Check"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Self-Check' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Self-Check"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Start/Restart all Services' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Start/Restart all Services"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Start/Restart all Services' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Start/Restart all Services"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Stop all Services' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Stop all Services"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Stop all Services' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Stop all Services"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Configure Corporal (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Corporal (Advanced)"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Configure Corporal (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Corporal (Advanced)"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Configure Dimension' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Dimension"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Configure Dimension' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Dimension"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Configure Element' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Element"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Configure Element' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Element"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Configure Element Subdomain' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Element Subdomain"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Configure Element Subdomain' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Element Subdomain"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Configure Email Relay' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Email Relay"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Configure Email Relay' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Email Relay"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Configure Jitsi' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Jitsi"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Configure Jitsi' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Jitsi"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Configure ma1sd (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure ma1sd (Advanced)"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Configure ma1sd (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure ma1sd (Advanced)"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Configure Synapse' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Synapse"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Configure Synapse' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Synapse"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Configure Synapse Admin' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Synapse Admin"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Configure Synapse Admin' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Configure Synapse Admin"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Create User' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Create User"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Create User' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Create User"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Purge Media (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Purge Media (Advanced)"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Purge Media (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Purge Media (Advanced)"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Revoke execute permission on 'Purge Database (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Purge Database (Advanced)"
    role: execute
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Grant read permission on 'Purge Database (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Purge Database (Advanced)"
    role: read
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Execute 'Stop all Services' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_launch:
    job_template: "{{ matrix_domain }} - 0 - Stop all Services"
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  register: job
  when: matrix_domain is defined

- name: Wait for job max 300s
  awx.awx.tower_job_wait:
    job_id: "{{ job.id }}"
    timeout: 300
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  ignore_errors: yes
  when: matrix_domain is defined

# wait until its stopped

- name: Execute '<< SUBSCRIPTION DELETION IN PROGRESS >>' job template if delay is immediate
  delegate_to: 127.0.0.1
  awx.awx.tower_job_launch:
    job_template: "0 - {{ subscription_id }} - << SUBSCRIPTION DELETION IN PROGRESS >>"
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: delete_subscription_hours_delay | int == 0

# launch deletion job if {{ delete_subscription_hours_delay }} == 0

