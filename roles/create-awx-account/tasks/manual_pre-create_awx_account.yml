
- name: Include AWX master token from awx_tokens.yml
  include_vars:
    file: /var/lib/awx/projects/hosting/awx_tokens.yml
  no_log: True

- name: Create a AWX session token for executing modules
  awx.awx.tower_token:
    description: 'AWX Session Token'
    scope: "write"
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_master_token }}"
  register: awx_session_token
  no_log: True

- name: Create AWX organisation
  awx.awx.tower_organization:
    name: "{{ member_id }}"
    description: "{{ client_email }} Organisation"
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
   
- name: Create a Team for the user
  awx.awx.tower_team:
    name: "{{ member_id }}"
    description: "{{ client_email }} Team"
    organization: "{{ member_id }}"
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
    
- name: Create AWX user
  awx.awx.tower_user:
    username: "{{ client_email }}"
    password: "{{ client_password }}"
    email: "{{ client_email }}"
    first_name: "{{ client_first_name }}"
    last_name: "{{ client_last_name }}"
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: client_password|length > 0

- name: Add user to the appropriate team
  awx.awx.tower_role:
    user: "{{ client_email }}"
    target_team: "{{ member_id }}"
    role: member
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Delete the AWX session token for executing modules
  awx.awx.tower_token:
    description: 'AWX Session Token'
    scope: "write"
    state: absent
    existing_token_id: "{{ awx_session_token.ansible_facts.tower_token.id }}"
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"

- name: Generate random string for subscription_id
  shell: tr -dc A-Z0-9 </dev/urandom | head -c 12
  register: random_string
  
- name: Set subscription_id
  set_fact:
    subscription_id: "T-{{ random_string.stdout }}"

