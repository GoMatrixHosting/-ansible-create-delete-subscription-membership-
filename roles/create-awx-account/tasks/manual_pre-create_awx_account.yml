
- name: Collect AWX admin token the hard way!
  shell: |
      curl -sku admin:{{ admin_password }} -H "Content-Type: application/json" -X POST -d '{"description":"Tower CLI", "application":null, "scope":"write"}' https://{{ awx_url }}/api/v2/users/1/personal_tokens/ | jq '.token' | sed -r 's/\"//g'
  register: tower_token
  no_log: True

- name: Create AWX organisation
  awx.awx.tower_organization:
    name: "{{ member_id }}"
    description: "{{ client_email }} Organisation"
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
   
- name: Create a Team for the user
  awx.awx.tower_team:
    name: "{{ member_id }}"
    description: "{{ client_email }} Team"
    organization: "{{ member_id }}"
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
    
- name: Create AWX user
  awx.awx.tower_user:
    username: "{{ client_email }}"
    password: "{{ client_password }}"
    email: "{{ client_email }}"
    first_name: "{{ client_first_name }}"
    last_name: "{{ client_last_name }}"
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes

- name: Add user to the appropriate team
  awx.awx.tower_role:
    user: "{{ client_email }}"
    target_team: "{{ member_id }}"
    role: member
    state: present
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
    
- name: Generate random string for subscription_id
  shell: tr -dc A-Z0-9 </dev/urandom | head -c 12
  register: random_string
  
- name: Set subscription_id
  set_fact:
    subscription_id: "T-{{ random_string.stdout }}"

