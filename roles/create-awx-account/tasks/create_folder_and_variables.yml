

- name: Create a directory if it does not exist locally on AWX
  delegate_to: 127.0.0.1
  file:
    path: '/var/lib/awx/projects/clients/{{ client_email }}/{{ subscription_id }}/'
    state: directory
    mode: '0700'

# Create do_droplet.yml file locally on AWX.

- name: Set slug_size for plan
  set_fact:
    slug_size: "s-1vcpu-1gb"
    swap_size: "2G"
  when: plan_title=="Micro Server"

- name: Set slug_size for plan
  set_fact:
    slug_size: "s-1vcpu-2gb"
    swap_size: "2G"
  when: plan_title=="Small Server"

- name: Set slug_size for plan
  set_fact:
    slug_size: "s-2vcpu-4gb"
    swap_size: "4G"
  when: plan_title=="Medium Server"

- name: Set slug_size for plan
  set_fact:
    slug_size: "s-4vcpu-8gb"
    swap_size: "8G"
  when: plan_title=="Large Server"

- name: Set slug_size for plan
  set_fact:
    slug_size: "s-8vcpu-32gb"
    swap_size: "32G"
  when: plan_title=="Jumbo Server"

- name: Add do_image line to do_droplet.yml file locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    dest: '/var/lib/awx/projects/clients/{{ client_email }}/{{ subscription_id }}/do_droplet.yml'
    line: 'do_image: {{ do_image_master }}'
    mode: '0600'
    state: present
    create: yes

- name: Add slug_size line to do_droplet.yml file locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    dest: '/var/lib/awx/projects/clients/{{ client_email }}/{{ subscription_id }}/do_droplet.yml'
    line: 'slug_size: {{ slug_size }}'
    mode: '0600'
    state: present

- name: Add swap_size line to do_droplet.yml file locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    dest: '/var/lib/awx/projects/clients/{{ client_email }}/{{ subscription_id }}/do_droplet.yml'
    line: 'swap_size: {{ swap_size }}'
    mode: '0600'
    state: present

# Create organisation.yml file, generate password if needed.

- name: Check if organisation.yml file already exists on AWX
  delegate_to: 127.0.0.1
  stat: 
    path: '/var/lib/awx/projects/clients/{{ client_email }}/organisation.yml'
  register: orgfile

- name: Set base value for generate_password
  set_fact:
    generate_password: false

- name: Set generate_password to true if organisation.yml doesn't exist
  set_fact:
    generate_password: true
  when: orgfile.stat.exists == false

- name: Install pwgen on tower with yum
  delegate_to: 127.0.0.1
  yum:
    name: pwgen
    state: latest
  when: generate_password == true

- name: Generate the users password
  delegate_to: 127.0.0.1
  command: 'pwgen -s 16 1'
  register: client_password
  when: generate_password == true

- name: Add client_password line to organisation.yml file locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    dest: '/var/lib/awx/projects/clients/{{ client_email }}/organisation.yml'
    line: 'client_password: "{{ client_password.stdout }}"'
    mode: '0600'
    state: present
    create: yes
  when: generate_password == true

- name: Add client_email line to organisation.yml file locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    dest: '/var/lib/awx/projects/clients/{{ client_email }}/organisation.yml'
    line: 'client_email: "{{ client_email }}"'
    mode: '0600'
    state: present

#Create extra_vars.yml variables file.

- name: Add subscription_id line to extra_vars.yml file locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    dest: '/var/lib/awx/projects/clients/{{ client_email }}/{{ subscription_id }}/extra_vars.yml'
    line: 'subscription_id: {{ subscription_id }}'
    mode: '0600'
    state: present
    create: yes

- name: Add client_email line to extra_vars.yml file locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    dest: '/var/lib/awx/projects/clients/{{ client_email }}/{{ subscription_id }}/extra_vars.yml'
    line: 'client_email: {{ client_email }}'
    mode: '0600'
    state: present

