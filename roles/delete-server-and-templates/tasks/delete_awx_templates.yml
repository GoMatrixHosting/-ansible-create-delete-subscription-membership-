
- name: Install jq in AWX
  delegate_to: 127.0.0.1
  yum:
    name: jq
    state: latest
    
- name: Collect AWX admin token the hard way!
  delegate_to: 127.0.0.1
  shell: |
      curl -sku {{ tower_username }}:{{ tower_password }} -H "Content-Type: application/json" -X POST -d '{"description":"Tower CLI", "application":null, "scope":"write"}' https://{{ tower_host }}/api/v2/users/1/personal_tokens/ | jq '.token' | sed -r 's/\"//g'
  register: tower_token
  no_log: True

- name: Remove original 'Provision Server' job template
  awx.awx.tower_job_template:
    name: "0 - {{ subscription_id }} - Provision a New Server"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes

- name: Remove schedule for 'Deploy a New Server' job template
  awx.awx.tower_schedule:
    name: "{{ matrix_domain }} - 0 - Update Server Schedule"
    enabled: yes
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Deploy/Update a Server' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined
  
- name: Remove 'Self-Check' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Self-Check"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Start/Restart all Services' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Start/Restart all Services"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Stop all Services' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Stop all Services"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Configure Element' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Element"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Configure Synapse' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Synapse"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Configure Jitsi' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Jitsi"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Configure ma1sd (Advanced)' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure ma1sd (Advanced)"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Create User' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 2 - Create User"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Configure Website + Access Backup' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Website + Access Backup"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove 'Configure Synapse Admin' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Synapse Admin"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined
  
- name: Remove 'Configure Corporal (Advanced)' job template
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Corporal (Advanced)"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

- name: Remove host from organisations inventory
  awx.awx.tower_host:
    name: "matrix.{{ matrix_domain }}"
    description: "{{ matrix_domain }} Matrix Server"
    inventory: "{{ member_id }}"
    state: absent
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes
  when: matrix_domain is defined

